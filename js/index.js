(function() {
    var myChart = echarts.init(document.querySelector(".column .map"));
 
// 使用 echarts 绘制世界地图的实例作为纹理
var canvas = document.createElement('canvas');
var mapChart = echarts.init(canvas, null, {
  width: 4096, height: 2048
});
var geoCoordMap = { '芬兰': [24.909912, 60.169095], 
'美国': [-100.696295, 33.679979], 
'日本': [139.710164, 35.706962], 
'韩国': [126.979208, 37.53875], 
'瑞士': [7.445147, 46.956241],
'东南亚': [117.53244, 5.300343], 
'澳大利亚': [135.193845, -25.304039], 
'德国': [13.402393, 52.518569], 
'英国': [-0.126608, 51.208425], 
'加拿大': [-102.646409, 59.994255],
'美国': [-95.712891,37.09024],
'意大利': [12.56738,41.87194],
'纳米比亚': [18.49041,-22.95764],
'塞尔维亚': [21.005859,44.016521],
'美国': [-95.712891,37.09024],
'法国': [2.21374,46.227638],
'斯洛伐克': [19.699024,48.669026],
'捷克': [15.472962,49.817492],
'尼加拉瓜': [-85.207229,12.865416],
'巴基斯坦': [69.345116,30.375321],
'卢森堡': [6.129583,49.815273],
'西班牙': [-3.74922,40.463667],
'丹麦': [9.501785,56.26392],
'老挝': [102.495496,19.85627],
'伊朗': [53.688046,32.427908],
'马来西亚': [101.975766,4.210484],
'巴拉圭': [-58.443832,-23.442503],
'荷兰': [5.291266,52.132633],
'斯洛文尼亚': [14.995463,46.151241],
'波兰': [19.145136,51.919438],
'摩洛哥': [-7.09262,31.791702],
'哈萨克斯坦': [66.923684,48.019573], 
'埃塞尔比亚': [40.489673,9.145],
'中国': [116.4551,40.2539]
}
var BJData = [ 
    [{name:'中国'}, {name:'日本',value:1305}],
    [{name:'中国'}, {name:'韩国',value:500}],
    [{name:'中国'}, {name:'英国',value:500}],
    [{name:'中国'}, {name:'意大利',value:264.76}],
    [{name:'中国'}, {name:'塞尔维亚',value:1000}],
    [{name:'中国'}, {name:'纳米比亚',value:606}],    
     [{name:'中国'}, {name:'美国',value:260}],
     [{name:'中国'}, {name:'捷克',value:110}],
     [{name:'中国'}, {name:'法国',value:100}],
     [{name:'中国'}, {name:'斯洛伐克',value:100}],
     [{name:'中国'}, {name:'马来西亚',value:60}],
     [{name:'中国'}, {name:'卢森堡',value:64.57}],
     [{name:'中国'}, {name:'巴基斯坦',value:98.5}],
     [{name:'中国'}, {name:'尼加拉瓜',value:100}],
     [{name:'中国'}, {name:'埃塞尔比亚',value:54.6}],
     [{name:'中国'}, {name:'西班牙',value:51.7622}],
     [{name:'中国'}, {name:'丹麦',value:50}],
     [{name:'中国'}, {name:'老挝',value:40.5}],
     [{name:'中国'}, {name:'伊朗',value:40}],
     [{name:'中国'}, {name:'巴拉圭',value:10}],
     [{name:'中国'}, {name:'荷兰',value:3}],
     [{name:'中国'}, {name:'斯洛文尼亚',value:3}],
     [{name:'中国'}, {name:'德国',value:2}],
     [{name:'中国'}, {name:'波兰',value:2}],
     [{name:'中国'}, {name:'摩洛哥',value:2}],
     [{name:'中国'}, {name:'哈萨克斯坦',value:1.5934}]
 ];
 var planePath = 'path://M1705.06,1318.313v-89.254l-319.9-221.799l0.073-208.063c0.521-84.662-26.629-121.796-63.961-121.491c-37.332-0.305-64.482,36.829-63.961,121.491l0.073,208.063l-319.9,221.799v89.254l330.343-157.288l12.238,241.308l-134.449,92.931l0.531,42.034l175.125-42.917l175.125,42.917l0.531-42.034l-134.449-92.931l12.238-241.308L1705.06,1318.313z';
    
 var convertData = function (data) {
     console.log(data);
     var res = [];
     for (var i = 0; i < data.length; i++) {
         var dataItem = data[i];
         var fromCoord = geoCoordMap[dataItem[0].name];
         var toCoord = geoCoordMap[dataItem[1].name];
         if (fromCoord && toCoord) {
             res.push({
                 fromName: dataItem[0].name,
                 toName: dataItem[1].name,
                 coords: [fromCoord, toCoord],
                 value: dataItem[1].value
             });
         }
     }
     return res;
 };
 
 
 var dser = [];
 var series = [];
 [['中国', BJData]].forEach(function(item, i) {
    dser.push({ 
    type: 'effectScatter',         
    coordinateSystem: 'geo', 
    zlevel: 3,
    rippleEffect: {
        brushType: 'stroke' 
    },
    label: {
        fontSize:24,  
        show: true,
        position: 'right', 
        formatter: '{b}'  
    },
    itemStyle: {
        normal: {
            color: '#f5f802'
        }
    },
    tooltip:{
        trigger: 'item',
        formatter:function(params, ticket, callback){
            console.log(params);
            return "线路："+params.data.name+""+params.data.value[2];
        } 
    },
    data: item[1].map(function(dataItem) {
        return {
            name: dataItem[1].name,
            value: geoCoordMap[dataItem[1].name],
            symbolSize: dataItem[1].value /40
        };
    })
},{
    type: 'effectScatter',
    coordinateSystem: 'geo',
    zlevel: 3,
    rippleEffect: {
        brushType: 'stroke'
    },
   
    label: {
        normal: {
            show: true,
            position: 'left',
            fontSize:18,
            formatter: '{b}'
        }
    },
    itemStyle: {
        normal: {
            color: '#ff0000'
        }
    },
    data: [{
        name: item[0],
        value: geoCoordMap[item[0]],
        symbolSize:parseInt(Math.random()*20+10),
        label: {
            normal: {
                position: 'right'
            }
        }
    }]
})
series.push({
        type: 'lines3D',
        silent: false,
        effect: {
            show: true,
            period: 3,//速度
            trailLength: 0.1,//尾部阴影     
            symbol:planePath     
        },
        lineStyle: {//航线的视图效果
            color: '#9ae5fc',
            width: 1,
            opacity: 0.6
        },
        data: convertData(item[1])// 特效的起始、终点位置，一个二维数组，相当于coords: convertData(item[1])
    })
});


mapChart.setOption({
    geo: {
        silent:false,
        type: 'map',
        map: 'world',
        left:0,
        top:50,
        right: 0,
        bottom: 0,
        boundingCoords: [[-180, 90], [180, -90]],
        zoom:0,
        roam: true,
        itemStyle: {
            borderColor:'#000d2d',
            normal: {
                areaColor: '#2f4554',
                borderColor:'#000c2d'
            },
            emphasis: {
                areaColor: '#357cf8' 
            }
        },
        label:{
            fontSize:24
        }
    },
    series:dser

});
 
option = {
    tooltip : {
        show: true,
        trigger: 'item',
        formatter:function(params, ticket, callback){
            console.log(params);
            if(params.seriesType=="effectScatter") {
                return "线路："+params.data.name+""+params.data.value[2];
            }else if(params.seriesType=="lines3D"){
                return params.data.fromName+">"+params.data.toName+"<br />"+params.data.value;
            }else{
                return params.name;
            }
        }
    },

    
  globe:{
    show:true,
    baseTexture: mapChart,
   silent:false,
      shading:"lambert",
     top: 25,
     right:"10%",
    //视角控制
    viewControl:{
      projection:"perspective",
     damping:0.8,
      rotateSensitivity:1, //鼠标旋转灵敏度
      zoomSensitivity:1,//鼠标缩放灵敏度
      autoRotate:true,
      autoRotateAfterStill:1,//鼠标停止后多久恢复旋转(为0时暂停后不恢复旋转)
      distance: 150,
      //alpha:160,//视角绕 x 轴，即上下旋转的角度
      //beta:-20,//视角绕 y 轴，即左右旋转的角度。
      targetCoord: [116.46, 39.92]//定位到哪里
    }
  },
 series:series

};
if (option && typeof option === "object") {
  myChart.setOption(option, true);
}
})();
//中国援助图
$(function(){
	$('#dowebok').fullpage({
		sectionsColor: ['#7BAABE', '#7BAABE', '#7BAABE', '#7BAABE'],
		afterLoad: function(anchorLink, index){
			if(index == 2){
				$('.section2').find('p').delay(500).animate({
					left: '0'
				}, 1500, 'easeOutExpo');
			}
			if(index == 3){
				$('.section3').find('p').delay(500).animate({
					bottom: '0'
				}, 1500, 'easeOutExpo');
			}
			if(index == 4){
				$('.section4').find('p').fadeIn(2000);
			}
		},
		onLeave: function(index, direction){
			if(index == '2'){
				$('.section2').find('p').delay(500).animate({
					right: "80%"
				}, 1500, 'easeOutExpo');
			}
			if(index == '3'){
				$('.section3').find('map').delay(500).animate({
					left: '-10%'
				}, 1500, 'easeOutExpo');
			}
			if(index == '4'){
				$('.section4').find('p').fadeOut(2000);
			}
		}
	});
});
//美国疫情图
(function(){
    var myChart = echarts.init(document.querySelector(".uschart"));
    var xAxisData = [1.22,1.23,1.24,1.25,1.26,1.27,1.28,1.29,1.30,1.31,2.01,2.02,2.03, 2.04, 2.05, 2.06, 2.07, 2.08, 2.09, 2.10, 2.11, 2.12, 2.13, 2.14, 2.15, 2.16, 2.17, 2.18, 2.19, 2.20,2.21, 2.22, 2.23,2.24, 2.25, 2.26, 2.27, 2.28, 2.29, 3.01, 3.02, 3.03, 3.04, 3.05, 3.06, 3.07, 3.08, 3.09, 3.10, 3.11, 3.12, 3.13, 3.14, 3.15, 3.16, 3.17, 3.18, 3.19, 3.20, 3.21, 3.22, 3.23, 3.24, 3.25, 3.26, 3.27,3.28, 3.29, 3.30, 3.31, 4.01, 4.02, 4.03, 4.04, 4.05, 4.06, 4.07, 4.08, 4.09, 4.10];
    var data1 = [431,554,1208,1870,2613,4349,5739,7417,9308,11289,13748,16369,19381,22942,26302,28985,31774,33738,35982,37626,38800,52526,55748,56873,57416,57934,58016,57805,56303,54965,53284,51606,49824,47672,45604,43258,39919,37414,35329,32652,30004,27433,25352,23784,22177,20533,19016,17721,16145,14831,13526,12094,10734,9898,8976,8056,7263,6569,6013,5549,5120,4735,4287,3947,3460,3128,2691,2396,2161,2004,1863,1727,1562,1376,1299,1242,1190,1160,1116,1089];
    var data2 = [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,0,0,5,13,32,42,80,191,255,361,511,690,978,1243,1629,2091,2949,3678,4765,6033,8134,10720,14874,20581,27061,35897,46492,56454,68374,85461,101440,119634,137718,157901,180455,203270,228725,257261,287449,310491,335974,362590,388206,416782,445100];
    for (var i = 0; i < 100; i++) {
        xAxisData.push(i);
        data1.push((Math.sin(i / 5) * (i / 5 -10) + i / 6) * 5);
        data2.push((Math.cos(i / 5) * (i / 5 -10) + i / 6) * 5);
    }
    
    option = {
        title: {
            text: 'Daily Situation'
        },
        grid:{
        bottom:0,
        top:0,
        left:5,
        right:0
        },
        legend: {
            data: ['China', 'America'],
            left:0,
            top:30
            
        },
        toolbox: {
            // y: 'bottom',
            feature: {
                magicType: {
                    type: ['stack', 'tiled']
                },
                dataView: {},
                saveAsImage: {
                    pixelRatio: 2
                }
            }
        },
        tooltip: {},
        xAxis: {
            type:'category',
            max:"5",
            data: xAxisData,
            splitLine: {
                show: false
            },
            axisTick:{
                show:false
            },
            axisLabel:{
                show:false
            }
            
        },
        yAxis: {
            show:false,
        },
        series: [{
            name: 'China',
            type: 'bar',
            data: data1,
            barWidth:10,
            animationDelay: function (idx) {
                return idx * 10;
            }
        }, {
            name: 'America',
            type: 'bar',
            barWidth:10,
            data: data2,
            animationDelay: function (idx) {
                return idx * 10 + 100;
            }
        }],
        animationEasing: 'elasticOut',
        animationDelayUpdate: function (idx) {
            return idx * 5;
        }
    };
    myChart.setOption(option);
})();
//中国援助口罩图
(function(){
    var myChart = echarts.init(document.querySelector(".panel"));
    option = {
        color:['#2f4554'],
        title: {
            
        },
        tooltip: {
            trigger: 'axis',
            axisPointer: {
                type: 'shadow'
            }
        },
        legend: {
            type: 'scroll',
            selectorLabel:{
                color: 'skyblue'
            },
            data: ['援助口罩（万只）', '核酸检测试剂盒（万份）']
        },
        grid: {
      left: "0%",
      top: "25%",
      right: "0%",
      bottom: "0%",
      containLabel: true
        },
        yAxis: {
            type: 'value',
            boundaryGap: false,
            axisLabel: {
                color: "rgba(255,255,255,.6)",
                fontSize: "12"
                },
             
                axisLine: {
                    show: false,
                    lineStyle: {
                      color: "rgba(255,255,255,.1)",
                      width: 1,
                     type: "solid"
                    }
                },
                splitLine: {
                    show:false,
                    lineStyle: {
                      color: "rgba(255,255,255,.1)"
                    }
                  }
              
            
        },
        xAxis: {
            type: 'category',
            data: [ '亚洲','欧洲','美洲','非洲'],
            axisLabel: {
            color: "rgba(255,255,255,.6)",
            fontSize: "12"
            },
            axisLine: {
                show: false
            }
        },
        series: [
            {
                name: '援助口罩（万只）',
                type: 'bar',
                barWidth: "20%",
                data: [2737.4,2251.2,370,717.2]

            },
            {
                name: '核酸检测试剂盒（万份）',
                type: 'bar',
                barWidth: "35%",
                data: [54.4432,52.15,50,133.455]
            }
        ]
    };
    myChart.setOption(option);
})();
//中国援助其他图
(function(){
    var myChart = echarts.init(document.querySelector(".dpanel")); 
    var pathSymbols = {
        reindeer: 'path://M1023.968793 512.0972c0-282.258242-228.984556-511.073966-511.452563-511.073966-282.473122 0-511.462795 228.815722-511.462795 511.073966 0 260.737573 195.390741 475.854231 447.837044 507.156 14.231147 2.999101 31.564741 4.746785 52.209522 4.746785 5.795601 0 11.384509-0.304924 16.78207-0.857471C797.877943 1020.265179 1023.968793 792.575015 1023.968793 512.0972zM950.836169 519.328399c-1.471411-25.500029-4.8399-50.460814-9.969375-74.718637 0.455339-8.661681 0.579151-16.868022 0.346877-24.49726 6.343032 29.660502 9.687986 60.432236 9.687986 91.984698C950.902679 514.513057 950.875051 516.921751 950.836169 519.328399zM74.120572 512.0972c0-30.977405 3.225236-61.200685 9.345202-90.360825 18.931886 20.247766 63.554125 19.769915 74.436224-10.483039 19.471131 11.604504 45.637286 13.717484 45.637286 36.912165 0 76.550227 2.725897 158.618759 72.279247 159.886547 1.958471 0.025581 38.788778 13.957944 56.316786 59.416164 6.060619 15.711767 30.032959 0 56.321902 0 13.124008 0 0 22.110053 0 69.921714 0 47.626454 102.680569 120.959633 102.680569 120.959633-0.475804 31.525858 0.818588 57.017702 3.442161 77.38314-23.177287-0.426689-42.709813 2.645062-58.055262 7.868674C230.627375 907.644909 74.120572 728.142955 74.120572 512.0972zM620.440877 936.783561c-2.272604-11.126653-12.215375-17.220015-30.356301-12.451742 14.474677-61.640676 21.511461-96.169728 51.728602-122.387045 43.719746-37.898564 5.206218-80.04355-28.063232-75.076769-26.222433 3.958895-9.651149-32.467234-33.055594-34.481983-23.404445-1.958471-53.969486-48.511552-87.653346-64.530291-17.855443-8.479545-35.402894-31.203539-62.940184-32.221658-24.407215-0.946492-60.07615 20.637618-60.07615 3.999824 0-53.590889-5.426213-91.832236-6.541539-107.104012-0.900446-12.269607-8.020113-4.132845 24.974087-3.339838 17.956744 0.48092 9.185577-36.067997 26.959162-37.495409 17.456382-1.381367 59.052916 16.341056 69.650557 9.277668 9.845564-6.577352 72.371338 164.12683 72.371338 28.216717 0-16.126177-8.351641-44.163828 0-59.436629 33.030013-60.352424 63.952163-109.539311 61.175104-116.734697-1.575781-4.050986-33.792323-7.39594-59.569649 1.253462-8.699541 2.904963 2.766826 16.530355-9.727892 19.440434-46.814006 10.807404-88.175196-12.622623-73.691309-34.645701 14.831785-22.570509 68.571044-9.845564 73.282016-55.124718 2.710549-25.935927 4.956549-55.974003 6.45968-78.298935 63.004648 9.852726 56.069163-81.7677-37.613081-91.574381 189.525561 2.217349 350.128371 124.61565 409.062591 294.48692-2.980683-2.718734-6.448425-4.371258-10.453365-4.774413-28.324157-70.749511-97.074267-19.547874-73.752703 42.855112-124.959457 96.057172-92.973143 163.052434-51.9179 201.416569 21.603552 20.166931 42.200242 50.496628 55.610754 72.279247-14.596442 42.561444 53.781211 25.518448 87.503954-46.709636C890.911457 782.384621 771.249286 898.633281 620.440877 936.783561z',
        plane: 'path://"M508.110848 93.0816c232.774656 0 422.198272 189.423616 422.198272 422.197248S740.885504 937.476096 508.110848 937.476096c-232.773632 0-422.197248-189.422592-422.197248-422.197248S275.337216 93.0816 508.110848 93.0816M508.110848 32.768c-266.464256 0-482.510848 216.046592-482.510848 482.511872s216.046592 482.510848 482.510848 482.510848c266.466304 0 482.51392-216.045568 482.51392-482.510848S774.576128 32.768 508.110848 32.768L508.110848 32.768zM508.110848 153.396224c-199.907328 0-361.882624 161.97632-361.882624 361.883648 0 199.84896 161.975296 361.883648 361.882624 361.883648 199.846912 0 361.883648-162.034688 361.883648-361.883648C869.994496 315.372544 707.95776 153.396224 508.110848 153.396224zM639.694848 701.581312c-23.737344 26.622976-58.016768 42.292224-102.84032 47.003648l0 68.262912-57.135104 0 0-67.910656c-74.744832-7.658496-120.981504-51.126272-138.8288-130.287616l88.35072-23.02976c8.188928 49.770496 35.282944 74.627072 81.283072 74.627072 21.497856 0 37.402624-5.301248 47.53408-15.962112s15.19616-23.501824 15.19616-38.580224c0-15.607808-5.064704-27.450368-15.19616-35.460096-10.131456-8.067072-32.692224-18.258944-67.617792-30.62784-31.393792-10.894336-55.957504-21.61664-73.627648-32.334848-17.670144-10.602496-32.041984-25.503744-43.056128-44.648448-11.014144-19.203072-16.550912-41.58464-16.550912-67.028992 0-33.39776 9.894912-63.495168 29.569024-90.235904 19.673088-26.681344 50.654208-42.99776 92.945408-48.9472l0-52.712448 57.135104 0 0 52.71552c63.847424 7.658496 105.194496 43.763712 123.982848 108.376064l-78.68928 32.277504c-15.373312-44.29312-39.052288-66.439168-71.209984-66.439168-16.141312 0-29.099008 4.947968-38.815744 14.84288-9.7792 9.894912-14.666752 21.910528-14.666752 35.98848 0 14.37184 4.712448 25.387008 14.13632 33.102848 9.365504 7.65952 29.568 17.140736 60.43136 28.50816 33.926144 12.370944 60.54912 24.090624 79.809536 35.104768 19.318784 11.014144 34.692096 26.27072 46.235648 45.646848 11.486208 19.438592 17.258496 42.116096 17.258496 68.088832C675.328 641.79712 663.42912 675.017728 639.694848 701.581312z',
        train: 'path://M825.869732 355.065134v-8.631418a39.233716 39.233716 0 0 0-29.817625-38.056705l-113.581609-28.444444a702.675862 702.675862 0 0 0-340.940996 0l-113.777778 28.444444a39.233716 39.233716 0 0 0-29.621456 38.056705v8.631418a104.557854 104.557854 0 0 0-90.041379 51.984674A197.737931 197.737931 0 0 0 80.429119 512c0 75.524904 36.879693 156.934866 117.701149 156.934866v8.631418a39.233716 39.233716 0 0 0 29.621456 38.056705l113.777778 28.444444a702.675862 702.675862 0 0 0 340.940996 0l113.581609-28.444444a39.233716 39.233716 0 0 0 29.817625-38.056705v-8.631418c80.821456 0 117.701149-81.409962 117.701149-156.934866s-36.879693-156.934866-117.701149-156.934866z m-627.739464 274.636015c-53.94636 0-78.467433-61.008429-78.467433-117.701149s24.521073-117.701149 78.467433-117.701149z m588.505747 32.563985a19.616858 19.616858 0 0 1-14.908812 19.616858l-98.084291 24.717242a664.422989 664.422989 0 0 1-322.108812 0l-98.084292-24.717242a19.616858 19.616858 0 0 1-14.908812-19.616858V361.734866a19.616858 19.616858 0 0 1 14.908812-19.616858l98.084292-24.717242a664.422989 664.422989 0 0 1 322.108812 0l98.084291 24.717242a19.616858 19.616858 0 0 1 14.908812 19.616858z m96.122606-66.304981a65.716475 65.716475 0 0 1-56.888889 33.740996v-235.402298c53.94636 0 78.467433 61.008429 78.467433 117.701149a162.427586 162.427586 0 0 1-21.578544 83.960153z',
        ship: 'path://M861.184 602.112q0 14.336-9.216 23.04t-21.504 8.704q-16.384 0-24.576-10.752t-8.192-23.04l0-23.552-579.584 1.024 0 23.552q0 12.288-8.192 22.016t-22.528 9.728q-14.336 1.024-23.552-8.192t-10.24-23.552l0-24.576q-39.936-3.072-63.488-22.016t-36.352-43.008-16.384-47.616-3.584-34.816q0-30.72 12.288-57.344t31.232-46.592 42.496-31.744 45.056-11.776l705.536 0q21.504 0 44.544 11.776t41.472 31.744 30.208 46.592 11.776 57.344q0 32.768-13.312 59.904t-33.792 46.592-44.544 30.208-45.568 10.752l0 25.6zM230.4 343.04l-23.552 0 0 165.888 23.552 0 0-165.888zM291.84 343.04l-23.552 0 0 165.888 23.552 0 0-165.888zM351.232 343.04l-22.528 0 0 165.888 22.528 0 0-165.888zM411.648 343.04l-23.552 0 0 165.888 23.552 0 0-165.888zM167.936 343.04l-22.528 0 0 165.888 22.528 0 0-165.888zM770.048 318.464q-22.528 0-42.496 8.704t-34.816 23.552-23.552 34.816-8.704 42.496 8.704 42.496 23.552 34.816 34.816 23.552 42.496 8.704 42.496-8.704 34.816-23.552 23.552-34.816 8.704-42.496-8.704-42.496-23.552-34.816-34.816-23.552-42.496-8.704zM836.608 428.032q0 27.648-19.456 47.104t-47.104 19.456-47.104-19.456-19.456-47.104 19.456-47.104 47.104-19.456 47.104 19.456 19.456 47.104z',
        medical: 'path://M992.768 755.712c-19.968-46.592-49.152-87.552-86.528-121.856-25.6-23.552-55.296-43.52-87.552-59.392 65.024-56.32 102.4-136.704 102.4-222.72 0-162.304-132.096-294.4-293.888-294.4h-2.048c-15.872 0.512-30.208 6.656-40.96 17.92s-16.896 26.112-16.384 41.984c0 9.216 2.56 17.92 6.656 25.6C520.192 84.48 443.392 48.128 357.888 48.128c-162.304 0-294.4 132.096-294.4 294.4 0 102.4 53.76 197.632 141.312 251.392-124.928 59.392-204.8 185.344-204.8 323.584 0 32.256 26.112 58.88 58.88 58.88 15.872 0 30.208-6.144 41.472-17.408s17.408-25.6 17.408-41.472c0-132.608 108.032-240.64 240.64-240.64s240.64 108.032 240.64 240.64c0 32.256 26.112 58.88 58.88 58.88 32.256 0 58.88-26.112 58.88-58.88 0-138.24-79.872-264.192-204.8-323.584 87.552-53.248 141.312-148.992 141.312-251.392 0-67.584-23.04-130.048-61.44-179.712 9.728 7.168 21.504 11.776 34.816 11.776h1.024c97.792 0 177.152 79.36 177.152 177.152s-79.36 177.152-177.152 177.152c-32.256 0-58.88 26.112-58.88 58.88v2.048c0 32.256 26.112 58.88 58.88 58.88 164.864 0 280.064 109.056 280.064 265.216 0 32.256 26.112 58.88 58.88 58.88s58.88-26.112 58.88-58.88c-1.536-56.832-12.288-110.08-32.768-158.208z m-457.728-413.184c0 97.792-79.36 177.152-177.152 177.152S180.736 440.32 180.736 342.528s79.36-177.152 177.152-177.152 177.152 79.36 177.152 177.152z'
    };
    
    var labelSetting = {
        normal: {
            show: true,
            position: 'right',
            offset: [10, 0],
            textStyle: {
                fontSize: 16
            }
        }
    };
    
    
    option = {
       
        legend: {
            right:0,
            data: ['China']
        },
        tooltip: {
            trigger: 'axis',
            axisPointer: {
                type: 'shadow'
            }
        },
        grid: {
            containLabel: true,
            left: 20,
            bottom:5,
            top:10
        },
        yAxis: {
            data: ['helped contries', 'vedio conferences', 'donation(million$)', 'masks(hundred)', 'medical teams'],
            inverse: true,
            axisLine: {show: false},
            axisTick: {show: false},
            axisLabel: {
                margin: 30,
                fontSize: 14
            },
            axisPointer: {
                label: {
                    show: true,
                    margin: 30
                }
            }
        },
        xAxis: {
            splitLine: {show: false},
            axisLabel: {show: false},
            axisTick: {show: false},
            axisLine: {show: false}
        },
        series: [{
            name: 'China',
            type: 'pictorialBar',
            label: labelSetting,
            symbolRepeat: true,
            symbolSize: ['80%', '60%'],
            barCategoryGap: '40%',
            color:"#2f4554",
            data: [{
                value: 127,
                symbol: pathSymbols.reindeer
            }, {
                value: 70,
                symbol: pathSymbols.ship
            }, {
                value: 20,
                symbol: pathSymbols.plane
            }, {
                value: 60.758,
                symbol: pathSymbols.train
            }, {
                value: 13,
                symbol: pathSymbols.medical
            }]
        }]
    };
   myChart.setOption(option);    
}())